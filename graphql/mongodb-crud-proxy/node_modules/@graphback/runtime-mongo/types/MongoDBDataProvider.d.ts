import { Db } from "mongodb";
import { QueryFilter, ModelTableMap, GraphbackDataProvider, FieldTransformMap, ModelDefinition, FindByArgs } from '@graphback/core';
/**
 * Graphback provider that connnects to the MongoDB database
 */
export declare class MongoDBDataProvider<Type = any> implements GraphbackDataProvider<Type> {
    protected db: Db;
    protected collectionName: string;
    protected tableMap: ModelTableMap;
    protected fieldTransformMap: FieldTransformMap;
    constructor(model: ModelDefinition, db: any);
    create(data: Type): Promise<Type>;
    update(data: Partial<Type>, selectedFields?: string[]): Promise<Type>;
    delete(data: Partial<Type>, selectedFields?: string[]): Promise<Type>;
    findOne(filter: Partial<Type>, selectedFields?: string[]): Promise<Type>;
    findBy(args?: FindByArgs, selectedFields?: string[]): Promise<Type[]>;
    count(filter?: QueryFilter): Promise<number>;
    batchRead(relationField: string, ids: string[], filter?: QueryFilter, selectedFields?: string[]): Promise<Type[][]>;
    protected buildProjectionOption(selectedFields: string[]): {
        [x: string]: any;
    };
    private verifyMongoDBPrimaryKey;
    private sortQuery;
    private usePage;
}
//# sourceMappingURL=MongoDBDataProvider.d.ts.map