import { ModelDefinition, GraphbackOperationType } from '@graphback/core';
import { DataSyncModelConflictConfig, ConflictMetadata } from '../util';
import { MongoDeltaSource } from '../deltaSource';
import { DataSyncMongoDBDataProvider } from './DatasyncMongoDBDataProvider';
/**
 * Data Provider with update conflicts and optional conflict resolution
 * that connects to the MongoDB database
 */
export declare class DataSyncConflictMongoDBDataProvider<Type = any> extends DataSyncMongoDBDataProvider<Type> {
    protected conflictConfig: DataSyncModelConflictConfig;
    protected deltaSource: MongoDeltaSource;
    protected MAX_RETRIES: number;
    constructor(model: ModelDefinition, client: any, dataSyncConflictConfig: DataSyncModelConflictConfig);
    create(data: any): Promise<Type>;
    update(updateDocument: any, selectedFields: string[]): Promise<Type>;
    delete(data: any, selectedFields: string[]): Promise<Type>;
    protected checkForConflict(clientData: any, base: any, serverData: any, operation: GraphbackOperationType): ConflictMetadata | undefined;
}
//# sourceMappingURL=DataSyncConflictProvider.d.ts.map