import { QueryFilter, ModelDefinition, FindByArgs } from '@graphback/core';
import { MongoDBDataProvider } from '@graphback/runtime-mongo';
import { DataSyncProvider } from "./DataSyncProvider";
/**
 * Mongo provider that attains data synchronization using soft deletes
 */
export declare class DataSyncMongoDBDataProvider<Type = any> extends MongoDBDataProvider<Type> implements DataSyncProvider {
    protected TTLinSeconds: number;
    constructor(model: ModelDefinition, client: any);
    create(data: any): Promise<Type>;
    update(data: any, selectedFields?: string[]): Promise<Type>;
    delete(data: any, selectedFields?: string[]): Promise<Type>;
    findOne(filter: any, selectedFields?: string[]): Promise<Type>;
    findBy(args?: FindByArgs, selectedFields?: string[]): Promise<Type[]>;
    count(filter: QueryFilter): Promise<number>;
    sync(lastSync: Date, selectedFields?: string[], filter?: QueryFilter, limit?: number): Promise<Type[]>;
}
//# sourceMappingURL=DatasyncMongoDBDataProvider.d.ts.map