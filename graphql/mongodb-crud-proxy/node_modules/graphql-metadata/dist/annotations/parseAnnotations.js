"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAnnotations = void 0;
const safe_evaluate_1 = require("../util/safe-evaluate");
/**
 * Parse annotations
 * Examples:
 * ```
 * @marker.test: 10
 * ``
 *
 * @param {string} namespace
 * @param {string?} description
 * @returns object or undefined if description is not found
 * @deprecated This method is deprecated and will be removed in a future release. Please use `parseMetadata`. See https://github.com/aerogear/graphql-metadata#metadata-parsing
 */
function parseAnnotations(namespace, description) {
    if (description) {
        const start = `@${namespace}`;
        const lines = description.split('\n').map(line => line.trim())
            .filter(line => line.startsWith(start));
        const result = lines.reduce((obj, line) => {
            line = line.substr(start.length + 1);
            const separatorIndex = line.indexOf(':');
            if (separatorIndex === -1) {
                if (line) {
                    obj[line] = true;
                }
                else {
                    obj = true;
                }
            }
            else {
                const name = line.substr(0, separatorIndex).trim();
                const value = line.substr(separatorIndex + 1).trim();
                try {
                    obj[name] = safe_evaluate_1.safeEvaluate(value);
                }
                catch (e) {
                    console.error(`Can't parse annotation ${line}: ${e.message}`);
                }
            }
            return obj;
        }, {});
        return result;
    }
    return {};
}
exports.parseAnnotations = parseAnnotations;
//# sourceMappingURL=parseAnnotations.js.map